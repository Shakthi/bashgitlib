#!/bin/bash
#importmod
#description -- This snippest  bla bla
#import othersnippet

importmod_imported=1


complete -F _import_complete  importmod_edit
_importmod_edit_check()
{
    local output=$(mktemp /tmp/_importmod_edit_check.XXXX)
    local erroroutput=$(mktemp /tmp/_importmod_edit_check.XXXX)
    local filename=$1
    (  
        bash -xe $filename

    )>$output 2>$erroroutput

    local status=$?

    if  [[ $status == 0 ]];then
        :
    else
        (import debuglog; debuglog_error "Error follows($status)")
        cat $erroroutput
    fi

    rm $erroroutput $output
    return $status
}
_importmod_edit_isimported()
{

 local iimported=$(eval echo \$$1"_imported")
 if test -z $iimported ;then
  return 1
  else return 0  
 fi

}



importmod_edit()
{
    local name=$1
    local fullname=$import_path/$name.snippest

    if [ -f $fullname ] ;then

	vi $fullname +':set filetype=sh' 

    if  (_importmod_edit_check  $fullname) ;then
        if _importmod_edit_isimported $name ;then 
         source $fullname
        fi
        $BGIT_BASEDIR/bbin/bgit add $fullname

    else
        (import debuglog; debuglog_error "failed to source")
    fi
    else
        (import debuglog; debuglog_error "importmod_edit:$name not found")
	return 1
    fi

}

importmod_add()
{
(import debuglog
 local name=$1
  local fullname=$import_path/$name.snippest
   if [ -f $fullname ];then
     importmod_edit $name
     return $?
   fi 

  local tempfile=`mktemp -q /tmp/import.XXXXXX`
  cat $import_datapath/snippettemplate | sed s/snippetname/$name/ > $tempfile 
  vi "+r $tempfile"  $fullname
  if [ -f $fullname ];then
    cat $fullname |grep -Ev '^#description -- This snippest  bla bla$' |grep -Ev '^#import othersnippet$'> $tempfile
    cat $tempfile >$fullname	
     if  (_importmod_edit_check  $fullname) ;then 
        bgit add $fullname
     else
        debuglog_error "failed to source"
     fi

  fi
  rm $tempfile
)
}

importmod_commit()
{
(
  import bgit debuglog
 
  local newfile=$( bgit status --porcelain |grep '^A'|cut -f 3 -d ' ')
  local modified=$( bgit status --porcelain |grep '^M'|cut -f 3 -d ' ')
  lastcommited=$(bgit log --name-only HEAD~1..HEAD|tail -n 1)


  for i in $modified;
   do
    local amend=
    if [[ $i == $lastcommited ]];then
     amend="--amend "
     else
     continue 
    fi
 
   bgit diff --cached $i
   local opt=
   read -p "Proceed to commit $i?:"  opt
   if [[ $opt == q ]];then
    return 0
   fi
   if [[ $opt != n ]];then
    bgit commit $amend $i
   fi
  done







  for i in $modified;
   do
   bgit diff --cached $i
   local opt=
   read -p "Proceed to commit$i?:"  opt
   if [[ $opt == q ]];then
    return 0
   fi
   if [[ $opt != n ]];then
 
    bgit commit $i
   fi
  done

  for i in $newfile;
   do
    vi $i
   echo "Adding new snippet $(basename $newfile)"|bgit commit -F -e -  $i
  done

)
}


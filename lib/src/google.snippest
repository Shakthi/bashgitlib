#!/bin/bash
#google
#description -- This snippest  bla bla
#import othersnippet


google_imported=1
url_encode()
{
 local string="$*"
  local strlen=${#string}
  local encoded=""

  for (( pos=0 ; pos<strlen ; pos++ )); do
     c=${string:$pos:1}
     case "$c" in
        [-_.~a-zA-Z0-9] ) o="${c}" ;;
        * )               printf -v o '%%%02x' "'$c"
     esac
     encoded+="${o}"
  done
  echo "${encoded}"    # You can either set a return variable (FASTER) 
#  REPLY="${encoded}"   #+or echo the result (EASIER)... or both... :p
 #http://stackoverflow.com/questions/296536/urlencode-from-a-bash-script
}
google_searh()
{
(
import network;

if  network_isreachable;then
 return 0
else
 echo no network
 return 1
fi
)||return 1
      opener=open 
      local application=
      if [ x"$1" == x"safari:" -o x"$1" == x"opera:" -o x"$1" == x"chrome:" ];then
       
      application="-a $(echo $1|sed s+:++)";shift 1
      else
         if [ x"$1" == xelinks: ];then
              application=" $(echo $1|sed s+:++)";shift 1
             opener=
         fi  
      fi
 
       local search=
	if [ $# -eq 0 ]
		then
			echo "Usage: chkargs argument..." 1>&2
	    exit 1
	fi
	
	for term in $@
	do
           term=$(url_encode $term)
	   if [[ $search != "" ]] ;then	
	    search="$search+$term"
	   else 	
	    search=$term
           fi
	done

	local url="http://www.google.com/search?q=$search"
	#echo $url
        if [ ! -z $opener ];then
	 $opener $application "$url"
        else
         $application "$url"
        fi
}


google_ping()
{
  ping -c 4 -t 15  www.google.co.in

}


google_localping()
{
(
 if test -f /Users/shakthiprasadgs/gitbin/lib/vardata/log/pppguard.log ;then

  local cachedping=$(tail -n 11 /Users/shakthiprasadgs/gitbin/lib/vardata/log/pppguard.log |grep '#Date:'|sed 's+#Date:++')
  if [ ! -z "$cachedping" ];then
   import datediff;
   local diffindate=$(datediff_subdates "$cachedping" "$(date)") 	
    if [ $diffindate -le 40 ];then
      tail -n 10 /Users/shakthiprasadgs/gitbin/lib/vardata/log/pppguard.log
      return 0
    fi 
  fi
 fi 
  ping -c 4 -t 15  www.google.co.in
)
}

google_mail()
{
(
import network;

if network_isreachable; then
open -a 'Google Chrome' https://mail.google.com/mail/
else
echo "NO network."	 
fi
)	
}


google_watchdog()
{
 while true;do
  google_ping >/dev/null
  if [ $? -eq 0 ] ;then
   #ok
   echo -en '\a'
   sleep 40
  else 
   echo -e "100% pocket loss loss \a\a\a\a\a" 
  fi
  done
}
